{
	"debug": {
		"enabled": 0,
		"development": 0,
		"logfile": {
			"template": "[%level_name%] %message% %context%"
		},
		"output": {
			"debug": 1,
			"info": 1,
			"notice": 1,
			"warning": 1,
			"error": 1,
			"critical": 1,
			"alert": 1,
			"emergency": 1
		}
	},
	"interface": {
		"accent_conversion": 0,
		"footer": {
			"left": "<strong>markNotes Â© 2016-2018<strong>",
			"right": "<a href='https://github.com/cavo789/marknotes' target='blank'>Fork me on GitHub</a>"
		},
		"show_tips": 1,
		"can_see": 1,
		"skin": "blue"
	},
	"github": {
		"url": "https://github.com/cavo789/marknotes"
	},
	"folder": "docs",
	"cloud": {
		"enabled": 0,
		"platform": "",
		"token": ""
	},
	"regional": {
		"locale": "en-UK",
		"language": "en",
		"timezone": "Europe/London"
	},
	"page": {
		"img_maxwidth": 800
	},
	"plugins": {
		"buttons": {
			"login": {
				"enabled": 1,
				"quickIcons": 1
			},
			"clear": {
				"enabled": 1,
				"quickIcons": 1
			},
			"favorites": {
				"enabled": 1,
				"quickIcons": 1
			},
			"sitemap": {
				"enabled": 1,
				"quickIcons": 0
			},
			"timeline": {
				"enabled": 1,
				"quickIcons": 0
			},
			"erase": {
				"enabled": 1,
				"quickIcons": 0
			},
			"fullscreen": {
				"enabled": 1,
				"quickIcons": 0
			},
			"print_preview": {
				"enabled": 1,
				"quickIcons": 0
			},
			"clipboard": {
				"enabled": 1,
				"quickIcons": 1
			},
			"copyhtml": {
				"enabled": 1,
				"quickIcons": 0
			},
			"md": {
				"enabled": 1,
				"quickIcons": 0
			},
			"new_window": {
				"enabled": 1,
				"quickIcons": 1
			},
			"reveal": {
				"enabled": 1,
				"quickIcons": 1
			},
			"remark": {
				"enabled": 1,
				"quickIcons": 0
			},
			"txt": {
				"enabled": 1,
				"quickIcons": 0
			},
			"epub": {
				"enabled": 1,
				"quickIcons": 0
			},
			"odt": {
				"enabled": 1,
				"quickIcons": 0
			},
			"docx": {
				"enabled": 1,
				"quickIcons": 1
			},
			"pdf": {
				"enabled": 1,
				"quickIcons": 0
			},
			"editor": {
				"enabled": 1,
				"quickIcons": 1
			},
			"filemanager": {
				"enabled": 1,
				"quickIcons": 0
			},
			"update": {
				"enabled": 1,
				"quickIcons": 1
			},
			"settings": {
				"enabled": 1,
				"quickIcons": 0
			}
		},
		"content": {
			"html": {
				"tags": {
					"enabled": 1,
					"not_if_task": ["task.search.search"],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"attributes": {
					"description": "Allow to add extra attributes (classes, style, data-attributes, ...) to DOM elements",
					"enabled": 1,
					"not_if_task": ["task.search.search", "task.edit.form"],
					"only_if_task": []
				},
				"balloon": {
					"description": "Add nicer tooltips (based on full css) in place of the standard 'title' attribute",
					"enabled": 0,
					"not_if_task": ["task.search.search", "task.edit.form"],
					"only_if_task": []
				},
				"bootstrap": {
					"description": "Add bootstrap features to the note once converted in HTML. The added features will be defined in the plugin's parameters",
					"enabled": 1,
					"not_if_task": ["task.search.search", "task.edit.form"],
					"only_if_task": []
				},
				"encrypt": {
					"description": "Add the lock span to show the user which parts of the note are connfidentials",
					"enabled": 1,
					"not_if_task": ["task.search.search", "task.edit.form"],
					"only_if_task": []
				},
				"datatables": {
					"description": "Just add a data-datatables-enable=1 to the HTML table tag when the plugin can be enabled for the rendered note. Should remains active as soon as the content datatable plugin has been enabled",
					"enabled": 1,
					"not_if_task": ["task.search.search"],
					"only_if_task": ["interface", "task.export.html", "main"]
				},
				"font-awesome": {
					"description": "Replace :fa-xxx: by the icon from font-awesome and, too, use a font-awesome bullet for lists",
					"enabled": 1,
					"not_if_task": ["task.search.search", "task.edit.form"],
					"only_if_task": []
				},
				"jolitypo": {
					"description": "automatically solve small issue with the note's typography",
					"enabled": 1,
					"not_if_task": ["task.search.search"],
					"only_if_task": ["main", "task.export.html", "task.export.pdf"]
				},
				"image_gallery": {
					"description": "Add an image gallery to the site; load images in a div/span so the page html plugin can handle them",
					"enabled": 1,
					"not_if_task": ["task.search.search", "task.edit.form"],
					"only_if_task": ["task.export.html", "task.export.pdf", "task.export.reveal"]
				},
				"optimize": {
					"description": "Prepare the optimization and, f.i., add a lazyload to images. **This plugin should be placed after the content.html.image_galley plugin**",
					"enabled": 1,
					"not_if_task": ["task.search.search", "task.edit.form"],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"format": {
					"description": "Format allows you to add your own custom prefix. In Markdown, you can type **bold** i.e. the double asterix will put what is inside in bold, the single asterix will put things in italic, ... Format will allow you to add your own prefix",
					"enabled": 1,
					"not_if_task": ["task.search.search", "task.edit.form"],
					"only_if_task": []
				},
				"microdata": {
					"description": "Add span with itemprop attribute to words of the note.",
					"enabled": 1,
					"not_if_task": ["task.search.search", "task.edit.form"],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"toc": {
					"description": "Add a table-of-contents in the note",
					"enabled": 1,
					"not_if_task": ["task.search.search", "task.edit.form", "task.export.pdf", "task.export.remarks", "task.export.reveal"],
					"only_if_task": []
				},
				"security": {
					"enabled": 1,
					"not_if_task": ["task.search.search", "task.edit.form"],
					"only_if_task": ["interface", "main", "task.export.html"]
				},
				"mermaid": {
					"description": "",
					"enabled": 1,
					"not_if_task": ["task.search.search"],
					"only_if_task": ["main", "task.export.html", "task.export.pdf", "task.export.reveal", "task.export.remark"]
				}
			}
		},
		"page": {
			"html": {
				"i18n": {
					"description": "i18n is the internationalization plugin, should remains enabled to give the opportunity to offer content to your user in their mother languages",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["interface", "main", "task.export.html", "task.timeline.get"]
				},
				"fakeLoader": {
					"description": "Add a loading animation when the interface is displayed. This, only, when the site is visited by an human, not a bot",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"animate": {
					"description": "Load the animate.css stylesheet",
					"enabled": 1,
					"not_if_task": ["task.edit.form", "task.timeline.get"],
					"only_if_task": ["main", "task.export.html", "task.timeline.get"]
				},
				"add_icons": {
					"description": "Analyze each URLs in the note and add icons before when, f.i., the link points to github, youtube, facebook, ... or to a file (.docx, .ppt, ...)",
					"enabled": 1,
					"not_if_task": ["task.edit.form", "task.timeline.get"],
					"only_if_task": ["main", "interface", "task.export.html", "task.export.reveal"]
				},
				"anchor": {
					"description": "Show an anchor near headings",
					"enabled": 1,
					"not_if_task": ["task.timeline.get"],
					"only_if_task": ["task.export.html"]
				},
				"balloon": {
					"description": "Add nicer tooltips (based on full css) in place of the standard 'title' attribute",
					"enabled": 1,
					"not_if_task": ["task.edit.form", "task.timeline.get"],
					"only_if_task": []
				},
				"banner": {
					"description": "Add the marknotes ascii banner in html files",
					"enabled": 1,
					"not_if_task": ["task.search.search", "task.edit.form"],
					"only_if_task": ["task.export.html", "task.export.reveal", "task.export.remark", "screen", "interface"]
				},
				"clipboard": {
					"description": "Load clipboard.js to allow copy in clipboard features (used by the 'clipboard' plugin buttons of the content side)",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"copyhtml": {
					"description": "Load the .js file used by the copyhtml button; will allow to copy the HTML of the note into the clipboard",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"datatables": {
					"enabled": 1,
					"not_if_task": ["task.edit.form", "task.timeline.get"],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"definitions": {
					"description": "Highlight words from the definition list",
					"enabled": 0,
					"not_if_task": ["task.edit.form", "task.timeline.get"],
					"only_if_task": ["main", "interface", "task.export.html", "task.export.reveal"]
				},
				"docx": {
					"description": "Load Googoose js files to allow to convert to Winword also when Pandoc isn't installed locally. This script is only needed for the interface",
					"enabled": 1,
					"not_if_task": ["task.edit.form", "task.timeline.get"],
					"only_if_task": ["interface", "main", "task.export.html"]
				},
				"favorites" : {
					"description": "Add JS / CSS for the favorites task plugin",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"editor": {
					"description": "Add the js file for the Edit feature",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.html", "task.edit.form"]
				},
				"encrypt": {
					"description": "Show a lock icon for encrypted portion of text",
					"enabled": 1,
					"not_if_task": ["task.edit.form", "task.timeline.get"],
					"only_if_task": []
				},
				"epub": {
					"description": "Add JS files for the EPUB conversion",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"erase": {
					"description": "Load the JS script for the erase button (in the treeview area)",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"filemanager": {
					"description": "Add the js file for the File Manager feature",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.html", "task.elf.show"]
				},
				"font-awesome": {
					"description": "Load font-awesome css, needed by the font-awesome content plugin",
					"enabled": 1,
					"not_if_task": ["task.timeline.get"],
					"only_if_task": []
				},
				"fullscreen": {
					"description": "Add the js file for the Fullscreen feature",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"ganalytics": {
					"description": "Load the JS for Google Analytics",
					"enabled": 0,
					"not_if_task": ["main", "interface"],
					"only_if_task": ["task.export.html"]
				},
				"github_banner": {
					"description": "Add a GitHub Fork to the page",
					"enabled": 0,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"gtranslate": {
					"enabled": 0,
					"not_if_task": ["main", "interface"],
					"only_if_task": ["task.export.html"]
				},
				"image_gallery": {
					"description": "Add an image gallery to the site; load JS and CSS",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.html", "task.export.pdf", "task.export.reveal"]
				},
				"linkify": {
					"enabled": 1,
					"not_if_task": ["task.timeline.get", "task.edit.form"],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"links_target": {
					"description": "Force hyperlinks to be opened in a new tab",
					"enabled": 1,
					"not_if_task": ["task.timeline.get"],
					"only_if_task": []
				},
				"login": {
					"description": "Load the JS script for the Login button (in the treeview area)",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"mermaid": {
					"description": "Integrate mermaid",
					"enabled": 1,
					"not_if_task": ["task.timeline.get"],
					"only_if_task": ["main", "interface", "task.export.html", "task.export.reveal"]
				},
				"md": {
					"description": "Load JS for the MD file opening",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"metadata": {
					"enabled": 1,
					"not_if_task": ["task.edit.form", "task.timeline.get"],
					"only_if_task": ["task.export.html"]
				},
				"microdata": {
					"description": "Load CSS for the microdata content plugin",
					"enabled": 1,
					"not_if_task": ["task.timeline.get"],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"new_window": {
					"description": "Load the .js file used by the New_Windows button",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"odt": {
					"description": "Add JS files for the ODT conversion",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"pdf": {
					"description": "Add JS files for the PDF conversion",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"print_preview": {
					"description": "Load the .js file used by the Print preview button",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"prism": {
					"enabled": 1,
					"not_if_task": ["task.export.remark"],
					"only_if_task": ["main", "interface", "task.export.html", "task.export.reveal"]
				},
				"remark": {
					"description": "Add the JS file for remark",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["task.export.remark"]
				},
				"reveal": {
					"description": "Add JS files for reveal.js",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.reveal", "task.export.html"]
				},
				"robots": {
					"enabled": 1,
					"not_if_task": ["task.edit.form"],
					"only_if_task": []
				},
				"share": {
					"description": "Add share buttons like facebook, twitter, mail, ...",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["task.export.html"]
				},
				"smileys": {
					"enabled": 0,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.html", "task.export.reveal", "task.export.remark"]
				},
				"tags": {
					"description": "Add css and js for the tags plugin",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"toc": {
					"description": "Load the toc.css stylesheet",
					"enabled": 1,
					"not_if_task": ["task.edit.form", "task.export.pdf", "task.export.remarks", "task.export.reveal", "task.timeline.get"],
					"only_if_task": []
				},
				"treeview": {
					"description": "**Mandatory** Load css and js for the treeview",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"txt": {
					"description": "Add JS files for the TEXT conversion",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface", "task.export.html"]
				},
				"update": {
					"description": "Load the JS script for the update button",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"upload": {
					"description": "Add an upload form so the user can send local files to the server",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"custom": {
					"description": "Load your own css and js files",
					"enabled": 1,
					"not_if_task": ["task.edit.form"],
					"only_if_task": []
				},
				"search": {
					"description": "Display the search engine in the interface",
					"enabled": 1,
					"not_if_task": [],
					"only_if_task": ["main", "interface"]
				},
				"optimize": {
					"description": "Optimization plugin; see options to know what this plugin will really do. **The best place for this plugin is to be fired as the last one (as defined in plugins.page.html)**",
					"enabled": 1,
					"not_if_task": ["task.edit.form"],
					"only_if_task": []
				}
			}
		},
		"markdown": {
			"beautify": {
				"description": "clean the markdown content, replace non breaking space, use LF and not CRLF, ... **The preferred order for this plugin is #1, just after the include plugin**",
				"enabled": 1,
				"not_if_task": ["task.search.search", "task.timeline.get", "task.edit.form"],
				"only_if_task": []
			},
			"csv": {
				"description": "Allow to insert a .csv file in the note; convert the .csv into an array",
				"enabled": 1,
				"not_if_task": [],
				"only_if_task": ["main", "interface", "task.export.html"]
			},
			"encrypt": {
				"description": "Add encryption. **The preferred order for this plugin is #2, after the beautify plugin**",
				"enabled": 1,
				"not_if_task": ["task.export.md", "task.timeline.get"],
				"only_if_task": []
			},
			"include": {
				"description": "Allow to include other files in a note just like if these contents were in that note. Allow to create files for f.i. each chapters of your content. **The preferred order for this plugin is #3, after beautify and encrypt**",
				"enabled": 1,
				"not_if_task": ["task.search.search", "task.edit.form", "task.export.md", "task.timeline.get"],
				"only_if_task": []
			},
			"yaml": {
				"description": "handle YAML block if present and create it if configured",
				"enabled": 1,
				"not_if_task": ["task.search.search", "task.timeline.get"],
				"only_if_task": []
			},
			"lastupdate": {
				"description": "Add the last update date/time in the conntent",
				"enabled": 1,
				"not_if_task": ["task.search.search", "task.edit.form", "task.timeline.get"],
				"only_if_task": []
			},
			"variables": {
				"description": "Allow to use variables like %URL%, %ROOT%, ... in the markdown content",
				"enabled": 1,
				"not_if_task": ["task.search.search", "task.edit.form", "task.export.md"],
				"only_if_task": []
			},
			"abbreviations": {
				"description": "Add tooltips for words in the abbreviation's list",
				"enabled": 1,
				"not_if_task": ["task.search.search", "task.edit.form", "task.timeline.get"],
				"only_if_task": ["main", "task.export.html", "task.export.reveal"]
			},
			"definitions": {
				"description": "Generate a table with definitions",
				"enabled": 1,
				"not_if_task": ["task.search.search", "task.edit.form", "task.timeline.get"],
				"only_if_task": ["interface", "main", "task.export.html"]
			},
			"footnotes": {
				"Description": "Add footnotes to the note",
				"enabled": 1,
				"not_if_task": ["task.search.search", "task.edit.form", "task.timeline.get"],
				"only_if_task": ["main", "task.export.html"]
			},
			"image_gallery": {
				"description": "Read a folder containing images and add images in the markdown note",
				"enabled": 1,
				"not_if_task": ["task.export.md", "task.search.search", "task.edit.form", "task.timeline.get"],
				"only_if_task": ["task.export.reveal"]
			},
			"todos": {
				"description": "Add a todo summary",
				"enabled": 1,
				"not_if_task": ["task.export.md", "task.search.search", "task.edit.form", "task.timeline.get"],
				"only_if_task": []
			},
			"toc": {
				"description": "Add a table-of-contents in the note",
				"enabled": 1,
				"not_if_task": ["task.export.reveal", "task.search.search", "task.edit.form", "task.timeline.get"],
				"only_if_task": []
			},
			"listfiles": {
				"description": "Read a folder containing files and add links to these files in the markdown note",
				"enabled": 1,
				"not_if_task": ["task.edit.form", "task.timeline.get"],
				"only_if_task": []
			},
			"hierarchy": {
				"description": "Add automatically number before headings",
				"enabled": 1,
				"not_if_task": ["task.search.search", "task.edit.form", "task.export.md", "task.timeline.get"],
				"only_if_task": []
			},
			"emoji": {
				"description": "Add emoji support",
				"enabled": 1,
				"not_if_task": ["task.search.search", "task.edit.form", "task.timeline.get"],
				"only_if_task": ["main", "task.export.html", "task.export.reveal"]
			},
			"docx": {
				"description": "When exporting to docx, add an extra attribute for Pandoc so images will have the correct size",
				"enabled": 1,
				"not_if_task": [],
				"only_if_task": ["task.export.docx"]
			}
		},
		"options": {
			"content": {
				"html": {
					"attributes": {
						"dom_elements": "a, code, div, h1, h2, h3, h4, h5, h6, img, p, span"
					},
					"balloon": {
						"attributes": "data-balloon-length=\"xlarge\" style=\"text-decoration:underline dotted;\" data-balloon-pos=\"up\""
					},
					"bootstrap": {
						"tables": {
							"extra-classes": "table table-bordered table-hover",
							"responsive": 1
						}
					},
					"font-awesome": {
						"bullet": "fa-check",
						"extra_attribute": ""
					},
					"format": {
						"prefix": [
							{
								"pattern": "==",
								"value": "<mark>$1</mark>"
							},
							{
								"pattern": "~~",
								"value": "<del>$1</del>"
							},
							{
								"pattern": "++",
								"value": "<ins>$1</ins>"
							},
							{
								"pattern": "@@",
								"value": "<kbd>$1</kbd>"
							},
							{
								"pattern": "^^",
								"value": "<sup>$1</sup>"
							},
							{
								"pattern": "Â§",
								"value": "<sub>$1</sub>"
							}
						]
					},
					"image_gallery": {
						"open_in_modal": 1
					},
					"microdata": {
						"not_in_tags": ["a", "abbr", "code", "dd", "dt", "img", "pre", "span"],
						"keywords": [
							"Christophe Avonture",
							"marknotes"
						]
					},
					"tags": {
						"not_in_tags": ["a", "abbr", "code", "dd", "dt", "h1", "pre", "span"],
						"class": "tag",
						"keywords": [""]
					},
					"toc": {
						"text": "**Table of content**",
						"collapse": 0
					}
				}
			},
			"markdown": {
				"abbreviations": {
					"abbr": []
				},
				"beautify": {
					"remove_html_comments": 1,
					"rewrite_file": 0
				},
				"csv": {
					"separator": ";",
					"value_separator" : "",
					"md_column_separator": "| "
				},
				"definitions": {
					"title": "## Glossary",
					"not_in_tags": ["a", "abbr", "dd", "dt", "link", "script", "span"],
					"terms": []
				},
				"encrypt": {
					"password": "",
					"method": "aes-256-ctr"
				},
				"footnotes": {
					"terms": []
				},
				"include": {
					"increment_headings": 1
				},
				"lastupdate": {
					"text": "> Last update : *%s*"
				},
				"todos": {
					"introduction": "## Summary",
					"tags": [
						{
							"anchor": "todo",
							"pattern": "(Todo)( |\\a|\\t|:){1}(.*)",
							"title": "### Todo's overview",
							"column": "Todo"
						},
						{
							"anchor": "decision",
							"pattern": "(Decision)( |\\a|\\t|:){1}(.*)",
							"title": "### Decision points",
							"column": "Decision"
						}
					]
				},
				"variables": {
					"not_in_tags": ["a", "abbr", "code", "pre"],
					"var": [
						{
							"pattern": "%SEE_SOURCE%{filename=\"?(.*)\"?}",
							"value": "*[see the $1 source code](view-source:%URL%$1)*"
						},
						{
							"pattern": "%RUN_JS%{text=\"(.*)\",function=\"(.*)\"}",
							"value": "*<a href=\"javascript:$2();\">$1</a>*"
						}, {
							"pattern": "WordPress",
							"value": "WordPress :fa-wordpress:"
						}, {
							"pattern": "Drupal",
							"value": "Drupal :fa-drupal:"
						}, {
							"pattern": "Prestashop",
							"value": "Prestashop :fa-shopping-cart:"
						}, {
							"pattern": "Magento",
							"value": "Magento :fa-shopping-cart:"
						}, {
							"pattern": "Moodle",
							"value": "Moodle :fa-pencil:"
						}, {
							"pattern": "phpBB",
							"value": "phpBB :fa-pencil:"
						}, {
							"pattern": "Github",
							"value": "Github :fa-github:"
						}
					]
				},
				"yaml": {
					"separator": "---",
					"add_if_missing": 1,
					"defaults": {
						"title": "%TITLE%",
						"created_time": "%TODAY%",
						"language": "%LANGUAGE%",
						"subtitle": ""
					}
				}
			},
			"page": {
				"html": {
					"add_icons": {
						"position": "after",
						"regex": [
							{
								"pattern": "(slideshare\\.)",
								"icon": "fa fa-slideshare"
							},
							{
								"pattern": "(twitter\\.)",
								"icon": "fa fa-twitter"
							},
							{
								"pattern": "(youtube\\.)",
								"icon": "fa fa-youtube"
							},
							{
								"pattern": "(facebook\\.com)",
								"icon": "fa fa-facebook-official"
							},
							{
								"pattern": "(github\\.com)",
								"icon": "fa fa-github"
							},
							{
								"pattern": "\\.(7z|gzip|tar|zip)",
								"icon": "fa fa-file-archive-o"
							},
							{
								"pattern": "(\\.docx?)",
								"icon": "fa fa-file-word-o"
							},
							{
								"pattern": "(\\.md)",
								"icon": "fa fa-file-text-o"
							},
							{
								"pattern": "(\\.pdf)",
								"icon": "fa fa-file-pdf-o"
							},
							{
								"pattern": "(\\.pptx?)",
								"icon": "fa fa-file-powerpoint-o"
							},
							{
								"pattern": "(\\.(xlsx?|xlam))",
								"icon": "fa fa-file-excel-o"
							}
						]
					},
					"custom": {
						"css": [],
						"js": []
					},
					"editor": {
						"spellchecker": 0
					},
					"fakeLoader": {
						"bgColor": "#3c8dbc",
						"spinner": "spinner4",
						"timeToHide": 1000
					},
					"ganalytics": {
						"code": "",
						"enable_localhost": 0
					},
					"gtranslate": {
						"enable_localhost": 0
					},
					"mermaid": {
						"theme": ""
					},
					"metadata": {
						"key": [
							{
								"pattern": "<!--%META_DATA%-->",
								"filename": "marknotes/plugins/page/html/metadata/metadata.txt"
							},
							{
								"pattern": "<!--%FAVICON%-->",
								"filename": "marknotes/plugins/page/html/metadata/favicon.txt"
							}
						]
					},
					"optimize": {
						"localStorage": 1,
						"server_session": 1,
						"cache": {
							"enabled" : 1,
							"duration": {
								"default" : 86400,
								"html" : 2678400,
								"sitemap" : 604800
							}
						},
						"headers": {
							"browser_cache": 0
						},
						"html": {
							"minify": 0,
							"remove_comments": 0
						},
						"css": {
							"minify": 0
						},
						"js": {
							"add_defer": 0,
							"defer_exceptions": [
								"ajaxify.js",
								"bootstrap",
								"CLDRPluralRuleParser",
								"i18n",
								"jquery.min.js",
								"linkify.min.js",
								"marknotes.js",
								"url.min"
							],
							"minify": 0
						},
						"images": {
							"lazyload": 1
						}
					},
					"reveal": {
						"animation": {
							"bullet": "",
							"h1": "zoom",
							"h2": "random",
							"h3": "random",
							"h4": "slide-in",
							"h5": "fade",
							"h6": "convex"
						},
						"appearance": {
							"theme": "beige",
							"custom": {
								"css": [],
								"js": []
							}
						},
						"duration": {
							"minutes": 60,
							"bar_height": 10
						},
						"HideUnnecessaryThings": 0,
						"no_html_convert": 0,
						"section": {
							"extra_data_img_attr": "data-background-size='contain'"
						}
					},
					"robots": {
						"bots": [
							{
								"name": "robots",
								"content": "index, follow"
							}
						]
					},
					"treeview": {
						"theme": "proton"
					}
				}
			},
			"task": {
				"acls": {
					"folders": {}
				},
				"export": {
					"after": {
						"copy": {
							"target_folder": ""
						}
					},
					"decktape": {
						"script": "c:\\christophe\\tools\\decktape\\phantomjs.exe"
					},
					"pandoc": {
						"script": "c:\\christophe\\tools\\pandoc\\pandoc.exe",
						"options": {
							"docx": "--from markdown --standalone -S --smart --columns 1000 --to docx",
							"epub": "--from markdown --standalone -S --table-of-contents --smart --to epub",
							"odt": "--from markdown --standalone -S --table-of-contents --smart --to odt",
							"pdf": "--from markdown --standalone -S --table-of-contents  --latex-engine=c:\\Christophe\\tools\\pandoc\\miktex\\miktex\\bin\\x64\\xelatex.exe -V geometry:margin=1in",
							"txt": "--from markdown --ascii"
						}
					}
				},
				"favorites" : {
					"list": [ ]
				},
				"fetch": {
					"querystring": "?tmpl=component",
					"timeout" : 5,
					"user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36 FirePHP/4Chrome",
					"content_DOM":[
						"//article",
						"//main",
						"//div[contains(attribute::class, 'item-page')]",
						"//div[contains(attribute::class, 'itemBody')]"
					],
					"remove_Attributes": [
						"class",
						"id",
						"itemprop",
						"itemscope",
						"itemtype",
						"rel",
						"style",
						"target"
					],
					"remove_DOM": [
						"//head",
						"//header",
						"//footer",
						"//noscript",
						"//aside",
						"//nav",
						"//div[contains(attribute::class, 'footer-menu')]",
						"//ul[contains(attribute::class, 'pagenav')]",
						"//ul[(attribute::class) = 'nav']",
						"//ul[(attribute::class) = 'breadcrumb']",
						"//ul[(attribute::class) = 'pagination-list']",
						"//div[(attribute::class) = 'clr']",
						"//div[(attribute::class) = 'middleSocialSharing']",
						"//div[(attribute::class) = 'share-container']",
						"//div[(attribute::class) = 'cat-children']",
						"//div[contains(attribute::class, 'pagination')]",
						"//div[contains(attribute::class, 'blogDate')]",
						"//div[contains(attribute::class, 'items-more')]",
						"//div[contains(attribute::class, 'itemContentFooter')]",
						"//div[contains(attribute::class, 'blocauteur')]",
						"//div[contains(attribute::class, 'blogInfo')]",
						"//div[contains(attribute::class, 'itemNavigation')]",
						"//div[contains(attribute::class, 'itemRelated')]",
						"//div[(attribute::class) = 'itemLinks']",
						"//div[(attribute::class) = 'itemComments']",
						"//div[(attribute::class) = 'itemBackToTop']",
						"//span[(attribute::class) = 'itemAuthor']",
						"//span[(attribute::class) = 'itemHits']",
						"//span[contains(attribute::class, 'itemDateModified')]",
						"//dl[contains(attribute::class, 'article-info')]",
						"//dd[(attribute::class) = 'create']",
						"//*[@id='system-message-container']",
						"//*[@id='itemCommentsAnchor']",
						"//*[(attribute::data-mce-bogus)]"
					],
					"regex": [
						{
							"search": "~<sup>\\s*SpÃ©cial\\s*<\/sup>~im",
							"replace_by": ""
						}
					]
				},
				"login": {
					"username": "admin",
					"password": "marknotes",
					"enabled" : 1
				},
				"robots-txt": {
					"bots_only": 0,
					"disallow_all": 0
				},
				"tags": {
					"min_chars": 6,
					"min_occurences": 10
				},
				"translate": {
					"include" : {
						"after" : "Free translation of the article  %YAML_ORIGINAL_URL%"
					}
				},
				"update": {
					"url": "https://raw.githubusercontent.com/cavo789/marknotes_install/master/install.php",
					"version_url":"https://raw.githubusercontent.com/cavo789/marknotes/master/package.json"
				}
			}
		},
		"task": {
			"export": {
				"before": {
					"debug": {
						"enabled": 1,
						"not_if_task": ["task.search.search"],
						"only_if_task": ["interface", "main", "task.export.html", "task.export.reveal"]
					},
					"kill_old_ones": {
						"enabled": 1,
						"not_if_task": ["task.search.search"],
						"only_if_task": []
					}
				},
				"after": {
					"debug": {
						"enabled": 1,
						"not_if_task": ["task.search.search"],
						"only_if_task": ["task.export.docx"]
					},
					"copy": {
						"enabled": 0,
						"not_if_task": ["task.search.search"],
						"only_if_task": []
					},
					"display": {
						"enabled": 1,
						"not_if_task": ["task.search.search"],
						"only_if_task": []
					}
				}
			},
			"favorites" : {
				"enabled" : 1
			},
			"markdown": {
				"write": {
					"description": "A few plugins like encrypt or beautify make changes to the content and will rewrite the file on the disk. This is done thanks to the write plugin (no files's rewriting if disabled). The preferred order for this plugin is at the last place.",
					"enabled": 1,
					"not_if_task": ["task.search.search"],
					"only_if_task": []
				}
			}
		}
	},
	"regex": {
		"page_break": "\n+^-{3,5}$\n+"
	},
	"site_name": "marknotes - An Open Source notes management tool",
	"templates": {
		"docx": "winword.docx",
		"index": "index",
		"html": "html",
		"pdf": "pdf",
		"remark": "remark",
		"reveal": "reveal",
		"screen": "screen",
		"timeline": "timeline"
	}
}
